public class ImobiliariaController {
    
    public integer quartos{get;set;}
    public integer banheiros{get;set;}
    public integer sala{get;set;}
    public integer cozinha{get;set;}
    public integer copa{get;set;}
    public integer suite{get;set;}
    public integer vagas{get;set;}
    public integer valor{get;set;}
    
    //método picklist
    public list<SelectOption> getMinhasOpcoes(){
        //mapear o campo de lista de seleção/picklist que desejo listar
        Schema.DescribeFieldResult describeResult = Imoveis__c.TipoImovel__c.getDescribe();
        
        //listar as opções válidas dentro do campo
        List<Schema.PicklistEntry> entries = describeResult.getPickListValues();
        
        //cria variável de retorno do tipo lista para o objeto SelectOption
        List<SelectOption> optionsToReturn = new List<SelectOption>();
        
        //adiciona as opções do campo listadas
        for(Schema.PicklistEntry pEntry : entries)    {
            
            //se a opção está ativa
            //Ou pode aplicar o filtro que quiser, caso nao queira mostrar todas as opções
            if(pEntry.isActive()){
                //adiciona o nome e o valor na variável retorno
                optionsToReturn.add(new SelectOption(pEntry.getValue(), pEntry.getLabel()));
            }            
        }     
        return optionsToReturn;       
    }
    //método salvar
    public void salvarImoveis(){
        
        Imoveis__c objImoveis = new Imoveis__c(); //Instância criar um objeto
        
        objImoveis.Quartos__c = quartos;
        objImoveis.Banheiro__c = banheiros;
        objImoveis.Sala__c = sala;
        objImoveis.Cozinha__c = cozinha;
        objImoveis.Copa__c = copa;
        objImoveis.Suite__c = suite;
        objImoveis.Garagem__c = vagas;
        objImoveis.Valor__c = valor;
        
        insert objImoveis; 
    }   
}
